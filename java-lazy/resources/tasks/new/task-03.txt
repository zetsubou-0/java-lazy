Дом с электроприборами ^___^

1. Создать следующую структуру пакетов относительно базового
        equipment
                factory
                        data
                                impl
                        impl
                model
                store
        house
                builder
        collection


2. В пакете моделей (model) создать интерфейс "ElectricEquipment"
    public interface ElectricEquipment {
        EquipmentType type();
        int power();
        int price();
        Warranty getWarranty();
    }
Warranty - класс, который находится в пакете 'store', в данном пункте достаточно создать пустой класс, с этим именем

класс абстрактной модели BaseElectricEquipment:
 - который будет содержать данные в виде приватных полей
 - также в нем реализовать все методы интерфейса
 - type и power задавать в конструкторе, соотеветственно они должны быть финальными
 - для всех (для кого возможно) создать геттеры и сеттеры

класс типа - перечисление EquipmentType, у которого есть 3 значения
    PORTABLE - портативные приборы, которые не требуют подлючения к сети
    HEAVY - крупногабаритные
    REGULAR - все остльные

реальизовать несколько классов приборов разного типа (наследуются от базового)


3. Создание фабрику, которая будет производить электрические приборы, для этого нам необходимо реализовать следующее
ElectricEquipmentFactoryService - интерфей, находится в пакете 'factory'. У данного интерфейса есть только 1 метод:
    Set<ElectricEquipment> create(Map<String, Object> parameters);
    создает набор электрических приборов (ElectricEquipment) на основе входной конфигурации Map<String, Object> parameters
    данная конфигурация содержит  параметры свойственные определенному типу электроприборов.
Создать 3 реальзации данного интерфейса (по 1 на каждый тип) в пакете 'factory.impl'
RegularEquipmentFactory
PortableEquipmentFactory
HeavyEquipmentFactory

создать класс непосредственно фабрики в пакете 'factory' - ElectricEquipmentFactory
у данного класа должны быть следующие ограничения
    - данный класс нельзя наследовать
    - нельзя создавать экземпляр данного класса (объект через new)
    - должен быть 1 public метод, который является статическим и может создавать приборы, на основе их типа
        public static Set<ElectricEquipment> create(EquipmentType type) { ... }
        во внутренней реализации использовать одну из трех реализаций 'ElectricEquipmentFactoryService' в зависимости от передоваемого типа
        на данном этапе данные для сервиса предоставить в ручную, можно испотльзовать заранее заготовленный объект Map<String, Object> parameters


4. Создать класс для предоставления рандомных данных ввиде Map<String Object> на основе типа 'EquipmentType'
Создать класс интерфейса 'DataProvider' в пакете 'factory.data'
    public interface DataProvider {
        Map<String, Object> generateParameters(EquipmentType type);
    }
И реализацию данного интерфейса 'RandomDataProvider' в пакете 'factory.data.impl'
данные могут быть лубого формата, главное чтобы они корректно обрабатывались в классах RegularEquipmentFactory, PortableEquipmentFactory, HeavyEquipmentFactory.
Т.е. на основе этих данных были сгенерированы продукты/
Для каждого класса желательно добавить новое поле, специфическое только для него (например для крупногабаритных или тяжелых - ширина, длина, высота)