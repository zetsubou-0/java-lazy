package session.session05.inheritance;

public class Inheritance {
    /*
    Наследование - отношение между классами, при котором характеристики одного класса(суперкласса)
    передаются другому классу (подклассу) без необходимости их повторного определения.

        ключевые слова:
    extends - подкласс наследует поля и методы суперкласса. Суперкласс может быть только один. Множественное наследование запрещено в java.
    implements - класс реализовывает интерфейс. Интерфейсов может быть сколько угодно
        Пример:
    public class Subclass extends Superclass implements FirstInterface, SecondInterface{ тело класса }

    Класс Object является общим суперклассом для всех классов.
    У интерфейсов нету общего предка.

    Наследование необходимо применять только при наличии отношения "является"("is a"). Т.е одна сущноть должна являться частным случаем другой сущности
        Пример последовательности наследуемых сущностей:
    Человек <- Человек с высшим образованием <- Программист <- Java-программист.
    К каждому наследнику можно применить выражение: он является потомком(java-программист является программистом, а он в свою очередь человеком с вышкой)

    Подкласс дополняет суперкласс своими полями и методами
    Можно определять методы с одинаковым именем и возвращающим значением:
    1) Переопределение(Overriding) - определение метода в подклассе с одинаковым именем, списком параметров, возвращающим значением.
        должна быть добавлена аннотация @Override перед методом
        Пример:
    public void coding(){System.out.println("я могу кодить");}

    @Override
    public void coding() {System.out.println("я могу кодить на Java");}

    2) Перегрузка(Overloading) - определение метода в подклассе с одинаковым именем и возвращающим значением, но разными параметрами
        Пример:
    public void coding(){System.out.println("я могу кодить");}

    public void coding(String line){System.out.println(line);}

    */

    public static void main(String[] args) {

    }
}
